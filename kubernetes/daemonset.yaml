---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pyroute2-cni-sa
  namespace: pyroute2-cni
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pyroute2-cni-clusterrole
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pyroute2-cni-binding
subjects:
  - kind: ServiceAccount
    name: pyroute2-cni-sa
    namespace: pyroute2-cni
roleRef:
  kind: ClusterRole
  name: pyroute2-cni-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: server-config
  namespace: pyroute2-cni
data:
  server.ini: |
    [api]
    socket_path_api = /var/run/pyroute2/api
    socket_path_fd = /var/run/pyroute2/fdpass

    [network]
    host_if = enp1s0
    bridge = pr2-bridge
    vxlan_if = pr2-vxlan147
    vxlan_id = 147

    [nftables]
    magic = pyroute2-cni nat 0x42

    [plan9]
    port = 8149

    [mdns]
    service = _9p2r._tcp.local.

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: pyroute2-cni
  namespace: pyroute2-cni
  labels:
    tier: node
    app: pyroute2-cni
    k8s-app: pyroute2-cni
spec:
  selector:
    matchLabels:
      app: pyroute2-cni
  template:
    metadata:
      labels:
        tier: node
        app: pyroute2-cni
    spec:
      serviceAccountName: pyroute2-cni-sa
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      hostNetwork: true
      priorityClassName: system-node-critical
      tolerations:
      - operator: Exists
        effect: NoSchedule
      containers:
      - name: pyroute2-cni
        image: ghcr.io/svinota/pyroute2-cni:v0.0.178
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: host-root
          mountPath: /host
        - name: pyroute2-run
          mountPath: /var/run/pyroute2
        - name: server-config
          mountPath: /app/config
      volumes:
      - name: host-root
        hostPath:
          path: /
      - name: pyroute2-run
        hostPath:
          path: /var/run/pyroute2
          type: DirectoryOrCreate
      - name: server-config
        configMap:
          name: server-config
